Execute (Initialize test environment):
    let g:temp_gitlab_repo = tempname() . '/mock_git_repo/'
    call system('mkdir -p ' . g:temp_gitlab_repo)
    exe 'chdir ' . g:temp_gitlab_repo
    call system('git init && git remote add origin git@my.gitlab.com:dummy/project.git')
    let b:git_dir = g:temp_gitlab_repo . '/.git'

    let b:gitlab_post_result = '[{"id":461,"iid":24,"project_id":5,"title":"A title","description":"A description","state":"opened","created_at":"2018-01-01T12:48:27.650Z","updated_at":"2018-02-28T14:33:56.073Z","labels":[],"milestone":null,"assignees":[],"author":{"name":"Steven Humphrey","username":"shumphrey","id":1,"state":"active","avatar_url":"https://secure.gravatar.com/avatar/3fca3c33bc65051b13f8c26c1dbab658?s=80\u0026d=identicon","web_url":"https://my.gitlab.com/shumphrey"},"assignee":null,"user_notes_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"web_url":"https://gitlab.inview.local/developer-utils/coffeescript-mikebot/issues/24"},{"id":462,"iid":123,"project_id":5,"title":"A title 2","description":"A description 2","state":"opened","created_at":"2018-01-01T12:48:27.650Z","updated_at":"2018-02-28T14:33:56.073Z","labels":[],"milestone":null,"assignees":[],"author":{"name":"Steven Humphrey","username":"shumphrey","id":1,"state":"active","avatar_url":"https://secure.gravatar.com/avatar/3fca3c33bc65051b13f8c26c1dbab658?s=80\u0026d=identicon","web_url":"https://my.gitlab.com/shumphrey"},"assignee":null,"user_notes_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"web_url":"https://gitlab.inview.local/developer-utils/coffeescript-mikebot/issues/123"}]'


    function! Post(url, headers, ...) abort
        let b:post_url = a:url
        let b:post_headers = a:headers
        let b:post_a000 = a:000

        return b:gitlab_post_result
    endfunction

Before:
    Save g:fugitive_gitlab_domains

    let g:fugitive_gitlab_domains = ['https://my.gitlab.com']
    let g:gitlab_api_keys = {'my.gitlab.com': 'test'}

    unlet! g:loaded_fugitive_gitlab
    unlet! g:autoloaded_fugitive_gitlab
    runtime plugin/gitlab.vim
    runtime autoload/gitlab.vim
    runtime autoload/fugitive.vim
    unlet! b:post_url
    unlet! b:post_headers
    unlet! b:post_a000

After:
    Restore g:fugitive_gitlab_domains

Execute (omnifunc - first):
    let res = gitlab#omnifunc(1, '')
    AssertEqual res, 0

Execute (omnifunc - all issues with #):
    let expected_url = 'https://my.gitlab.com/api/v4/projects/dummy%2Fproject/issues?scope=all&state=opened&per_page=100&search='
    " search for all isses with # as prefix
    let res = gitlab#omnifunc(0, '#')
    AssertEqual res, [{'word': '#24', 'menu': 'A title', 'info': 'A description', 'abbr': '#24'},{'word': '#123', 'menu': 'A title 2', 'info': 'A description 2', 'abbr': '#123'}]
    AssertEqual expected_url, b:post_url
    AssertEqual [
        \'PRIVATE-TOKEN: test',
        \'Content-Type: application/json',
        \'Accept: application/json',
    \], b:post_headers

Execute (omnifunc - issues matching #test):
    " search for issues starting with id 123
    let b:gitlab_post_url = 'https://my.gitlab.com/api/v4/projects/dummy%2Fproject/issues?scope=all&state=opened&per_page=100&search=test'
    let b:gitlab_post_result = '[{"id":462,"iid":123,"project_id":5,"title":"test","description":"test","state":"opened","created_at":"2018-01-01T12:48:27.650Z","updated_at":"2018-02-28T14:33:56.073Z","labels":[],"milestone":null,"assignees":[],"author":{"name":"Steven Humphrey","username":"shumphrey","id":1,"state":"active","avatar_url":"https://secure.gravatar.com/avatar/3fca3c33bc65051b13f8c26c1dbab658?s=80\u0026d=identicon","web_url":"https://my.gitlab.com/shumphrey"},"assignee":null,"user_notes_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"web_url":"https://gitlab.inview.local/developer-utils/coffeescript-mikebot/issues/123"}]'

    let res = gitlab#omnifunc(0, '#test')
    AssertEqual [{'word': '#123', 'menu': 'test', 'info': 'test', 'abbr': '#123'}], res

Execute (omnifunc - issues matching test, full url):
    let b:gitlab_post_url = 'https://my.gitlab.com/api/v4/projects/dummy%2Fproject/issues?scope=all&state=opened&per_page=100&search=test'
    let b:gitlab_post_result = '[{"id":462,"iid":123,"project_id":5,"title":"test","description":"test","state":"opened","created_at":"2018-01-01T12:48:27.650Z","updated_at":"2018-02-28T14:33:56.073Z","labels":[],"milestone":null,"assignees":[],"author":{"name":"Steven Humphrey","username":"shumphrey","id":1,"state":"active","avatar_url":"https://secure.gravatar.com/avatar/3fca3c33bc65051b13f8c26c1dbab658?s=80\u0026d=identicon","web_url":"https://my.gitlab.com/shumphrey"},"assignee":null,"user_notes_count":1,"upvotes":0,"downvotes":0,"due_date":null,"confidential":false,"web_url":"https://gitlab.inview.local/developer-utils/coffeescript-mikebot/issues/123"}]'

    let res = gitlab#omnifunc(0, 'test')
    AssertEqual [{'word': 'https://my.gitlab.com/dummy/project/issues/123', 'menu': 'test', 'info': 'test', 'abbr': '#123'}], res

Execute (omnifunc - members):
    let expected_url = 'https://my.gitlab.com/api/v4/projects/dummy%2Fproject/members?per_page=100&query=shumphrey'

    let b:gitlab_post_result = '[{"avatar_url":"https://secure.gravatar.com/avatar/fake?s=80&d=identicon","id":5,"state":"active","username":"shumphrey","expires_at":null,"name":"Steven Humphrey","access_level":50,"web_url":"https://gitlab.com/shumphrey"}]'

    let data = gitlab#omnifunc(0, '@shumphrey')
    AssertEqual b:post_headers, [
        \'PRIVATE-TOKEN: test',
        \'Content-Type: application/json',
        \'Accept: application/json',
    \]
    AssertEqual expected_url, b:post_url
    AssertEqual data, ['@shumphrey']

" vim: set ts=4 sw=4 et :
