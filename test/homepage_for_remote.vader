Before:
    Save g:fugitive_cgit_domains
    let g:fugitive_cgit_domains = ['https://git.example.com']

    unlet! g:autoloaded_fugitive_cgit_fugitive
    runtime autoload/cgit/fugitive.vim

After:
    Restore g:fugitive_cgit_domains

Execute (cgit#fugitive#homepage_for_remote - git@ url):
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('git@git.example.com:fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - https:// url):
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - ssh://git@ url):
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('ssh://git@git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - https://user@ url):
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://myrandomuser@git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected
    let url = cgit#fugitive#homepage_for_remote('https://myrandomuser:mypassword@git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected
    let url = cgit#fugitive#homepage_for_remote('https://myrandomuser:mypassword@git.example.com:5000/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit@homepage_for_remote - ssh://user@ url):
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('ssh://myrandomuser@git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected
    let url = cgit#fugitive#homepage_for_remote('ssh://myrandomuser:mypassword@git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected
    let url = cgit#fugitive#homepage_for_remote('ssh://myrandomuser:mypassword@git.example.com:5000/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - user@domain:path url):
    let url = cgit#fugitive#homepage_for_remote('randomuser@git.example.com:fugitive-cgit.vim.git')
    AssertEqual url, expected
    let url = cgit#fugitive#homepage_for_remote('randomuser:randompassword@git.example.com:fugitive-cgit.vim.git')
    AssertEqual url, expected

" github issue #8 https://github.com/shumphrey/fugitive-gitlab.vim/pull/8
Execute (cgit#fugitive#homepage_for_remote - ssh://git@ url with relative path):
    let g:fugitive_cgit_domains = ['https://example.com/rel_path']
    let expected = 'https://example.com/rel_path/user/repo.git'
    let url = cgit#fugitive#homepage_for_remote('ssh://git@example.com/user/repo.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - http:// non-https):
    let g:fugitive_cgit_domains = ['http://git.example.com']
    let expected = 'http://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('http://git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - trailing /):
    let g:fugitive_cgit_domains = ['https://git.example.com/']
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - simple dict config):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': 'https://git.example.com'
      \ }
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected

" NOTE: Truthy value is not allowed in fugitive-cgit, while it is allowed in fugutive-gitlab
Execute (cgit#fugitive#homepage_for_remote - simple dict config with truthy value):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': v:true,
      \ }
    AssertThrows cgit#fugitive#homepage_for_remote('https://git.example.com/fugitive-cgit.vim.git')

Execute (cgit#fugitive#homepage_for_remote - simple dict config with explicit ssh://):
    let g:fugitive_cgit_domains = {
      \   'ssh://ssh.host': 'https://web.host',
      \ }
    let expected = 'https://web.host/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('ssh://ssh.host/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - simple dict config with insecure host):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': 'http://git.example.com',
      \ }
    let expected = 'http://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('git@git.example.com:fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - full dict config):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': 'https://git.example.com',
      \   }
      \ }
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected

" NOTE: Truthy value is not allowed in fugitive-cgit, while it is allowed in fugutive-gitlab
Execute (cgit#fugitive#homepage_for_remote - full dict config with truthy value):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': v:true,
      \   }
      \ }
    AssertThrows cgit#fugitive#homepage_for_remote('https://git.example.com/fugitive-cgit.vim.git')

Execute (cgit#fugitive#homepage_for_remote - full dict config with explicit ssh://):
    let g:fugitive_cgit_domains = {
      \   'ssh://ssh.host': {
      \     'root': 'https://web.host',
      \   }
      \ }
    let expected = 'https://web.host/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('ssh://ssh.host/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - full dict config with insecure host):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': 'http://git.example.com',
      \   }
      \ }
    let expected = 'http://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('git@git.example.com:fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - full dict config located on subdir):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': 'https://git.example.com/cgit',
      \   }
      \ }
    let expected = 'https://git.example.com/cgit/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - full dict config with prefix path):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': 'https://git.example.com',
      \     'prefix': '/git',
      \   }
      \ }
    let expected = 'https://git.example.com/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/git/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - full dict config with prefix, located on subdir):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': 'https://git.example.com/cgit',
      \     'prefix': '/git',
      \   }
      \ }
    let expected = 'https://git.example.com/cgit/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/git/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - full dict config with prefix with trailing /, located on subdir):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': 'https://git.example.com/cgit/',
      \     'prefix': '/git/',
      \   }
      \ }
    let expected = 'https://git.example.com/cgit/fugitive-cgit.vim.git'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/git/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - full dict config removing .git suffix):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': 'https://git.example.com',
      \     'remove-git-suffix': v:true,
      \   }
      \ }
    let expected = 'https://git.example.com/fugitive-cgit.vim'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/fugitive-cgit.vim.git')
    AssertEqual url, expected

Execute (cgit#fugitive#homepage_for_remote - full dict config with prefix, removing .git suffix):
    let g:fugitive_cgit_domains = {
      \   'git.example.com': {
      \     'root': 'https://git.example.com',
      \     'prefix': '/git',
      \     'remove-git-suffix': v:true,
      \   }
      \ }
    let expected = 'https://git.example.com/fugitive-cgit.vim'
    let url = cgit#fugitive#homepage_for_remote('https://git.example.com/git/fugitive-cgit.vim.git')
    AssertEqual url, expected
